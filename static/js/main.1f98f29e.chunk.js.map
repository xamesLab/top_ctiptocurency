{"version":3,"sources":["components/Header.jsx","components/Like.jsx","components/MainContent.jsx","App.js","index.js"],"names":["Header","dispatch","useDispatch","data","useSelector","state","className","onClick","e","filtred","type","LikeButton","cur","isLike","like","src","alt","MainContent","useState","topList","setTopList","isLikedList","setIsLikedList","icon","getData","a","client","Binance","prices","symbol","toUpperCase","useEffect","forEach","i","then","d","filter","delHandler","el","map","val","Like","App","iconState","btc","eth","bnb","bch","ada","xrp","sol","dot","store","createStore","action","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f98f29e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state)\r\n\r\n    const changeList = (e) => {\r\n        dispatch(!data.filtred?{type:'LIKED'}:{type:'ALL'})\r\n    }\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className='header__content'>\r\n                <h1>топ 8 криптовалют</h1>\r\n                <div onClick={changeList} className={ `header__toggle_btn ${!data.filtred?'':'active'}` }>\r\n                    Избранное\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst LikeButton = ({cur}) => {\r\n    const isLike = useSelector(state => state.data[cur]?.like)\r\n    const dispatch = useDispatch()\r\n\r\n    const toggleLike = () => {\r\n        dispatch(isLike?{type:'DISLIKE', cur:cur}:{type:'LIKE', cur:cur})\r\n    }\r\n\r\n    return (\r\n        <div onClick={toggleLike} className='main__like'>\r\n            <img src={isLike?\"static/love-true2.png\":\"static/love.png\"} alt=\"like\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LikeButton","import React, { useEffect, useState } from \"react\";\r\nimport Binance from \"binance-api-node\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LikeButton from \"./Like\";\r\n\r\nconst MainContent = () => {\r\n    const [topList, setTopList] = useState(['btc', 'eth', 'bnb', 'bch', 'ada', 'xrp', 'sol', 'dot'])\r\n    const [isLikedList, setIsLikedList] = useState([])\r\n    \r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state)\r\n    const icon = useSelector(state => state.icon)\r\n\r\n    const getData = async function(cur){\r\n        const client = Binance();\r\n        try {\r\n            const data = await client.prices({ symbol: `${cur.toUpperCase()}USDT` })\r\n            return data[`${cur.toUpperCase()}USDT`]\r\n        } catch (error) {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        topList.forEach(i => {\r\n            getData(i).then(d => {\r\n                dispatch({type:\"SET\",cur:i,data:+d})\r\n            })\r\n        })\r\n        // не делаем новый запрос при изменении количества карточек на странице\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setIsLikedList(topList.filter(i => data.data[i]?.like))\r\n    },[data.filtred, data.data, topList])\r\n\r\n    const delHandler = (el) => {\r\n        setTopList(topList.filter(i=>i!==el))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!data.filtred ?\r\n                <div className='main'>\r\n                    {\r\n                    topList.map(i => (\r\n                        <div className='main__card' key={i}>\r\n                            <div className='card__title'>\r\n                                <h2>{ `${i.toUpperCase()}/USDT` }</h2>\r\n                            </div>\r\n                            <div className='card__icon'>\r\n                                <img src={`${icon[i]}`} alt=\"icon\" />\r\n                            </div>\r\n                            <p>Последняя цена:</p>\r\n                            {data.data[i]?.val}\r\n                            <div className='main__buttons'>\r\n                                <LikeButton cur={i}/>\r\n                                <div className='main__del_btn' onClick={() => delHandler(i)}>\r\n                                    <img src=\"static/close.png\" alt=\"del\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                </div> :\r\n                <div className='main'>\r\n                {\r\n                isLikedList.map(i => (\r\n                    <div className='main__card' key={i}>\r\n                        <div className='card__title'>\r\n                            <h2>{ `${i.toUpperCase()}/USDT` }</h2>\r\n                        </div>\r\n                        <div className='card__icon'>\r\n                            <img src={`${icon[i]}`} alt=\"icon\" />\r\n                        </div>\r\n                        <p>Последняя цена:</p>\r\n                        {data.data[i]?.val}\r\n                        <div className='main__buttons'>\r\n                            <LikeButton cur={i}/>\r\n                            <div className='main__del_btn' onClick={() => delHandler(i)}>\r\n                                <img src=\"static/close.png\" alt=\"del\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContent\r\n\r\n","import Header from \"./components/Header\";\nimport MainContent from \"./components/MainContent\";\nimport \"./Main.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <Header />\n      </header>\n      <main>\n        <MainContent />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nconst iconState = {\n  btc: \"https://profinvestment.com/wp-content/plugins/coin-market-cap/assets/coins-logos/bitcoin.svg\",\n  eth: \"https://profinvestment.com/wp-content/plugins/coin-market-cap/assets/coins-logos/ethereum.svg\",\n  bnb: \"https://profinvestment.com/wp-content/plugins/coin-market-cap/assets/coins-logos/binancecoin.svg\",\n  bch: \"https://assets.coingecko.com/coins/images/7451/large/GZZkGaIh_400x400.jpg\",\n  ada: \"https://profinvestment.com/wp-content/plugins/coin-market-cap/assets/coins-logos/cardano.svg\",\n  xrp: \"https://profinvestment.com/wp-content/plugins/coin-market-cap/assets/coins-logos/ripple.svg\",\n  sol: \"https://assets.coingecko.com/coins/images/4128/large/coinmarketcap-solana-200.png\",\n  dot: \"https://profinvestment.com/wp-content/plugins/coin-market-cap/assets/coins-logos/polkadot.svg\",\n};\n\nconst reducer = (\n  state = { data: {}, filtred: false, icon: iconState },\n  action\n) => {\n  switch (action.type) {\n    case \"LIKED\":\n      return { ...state, filtred: true };\n    case \"ALL\":\n      return { ...state, filtred: false };\n    case \"SET\":\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.cur]: { ...state.data[action.cur], val: action.data },\n        },\n      };\n    case \"LIKE\":\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.cur]: { ...state.data[action.cur], like: true },\n        },\n      };\n    case \"DISLIKE\":\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          [action.cur]: { ...state.data[action.cur], like: false },\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}